image: docker:stable

services:
  - docker:dind

stages:
  - build
  - test
  - release base
  - build images
  - test images
  - release

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  RELEASE_REGISTRY: docker.io
  RELEASE_IMAGE: index.docker.io/$RELEASE_USER
  SOLR_CORE: "d8"

################################################################################
# Templates to avoid repeat. A bit Xtrem here!
# https://docs.gitlab.com/ee/ci/yaml/#anchors
################################################################################

.docker_login_gitlab:
  - &docker_login_gitlab docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com

.docker_pull:
  - &docker_pull docker pull $CI_REGISTRY_IMAGE/$IMAGE || true

.docker_build_push:
  script: &docker_build_push
    - *docker_pull
    - docker build --compress --cache-from $RELEASE_IMAGE/$IMAGE --tag $CI_REGISTRY_IMAGE/$IMAGE $DIR
    - docker push $CI_REGISTRY_IMAGE/$IMAGE

.build_push: &build_push
  stage: build
  script: *docker_build_push

.test_base: &test_base
  stage: test
  before_script:
    - *docker_login_gitlab
    - *docker_pull
  script:
    - docker run $CI_REGISTRY_IMAGE/$IMAGE
      sh -c 'useradd -U test && /scripts/change_uid_gid.sh test:test 1001:1001'

.make_build:
  - &make_build apk --no-cache add make gettext && make build

.build_image: &build_image
  stage: build images
  before_script:
    - *docker_login_gitlab
    - *make_build
    - sed -i 's#FROM ${RELEASE_USER}#FROM ${CI_REGISTRY_IMAGE}#g' ${DIR}/Dockerfile
  script: *docker_build_push

.test_images: &test_images
  stage: test images
  before_script:
    - *docker_login_gitlab
    - *docker_pull
    - docker run -d -t --name test $CI_REGISTRY_IMAGE/$IMAGE

.test_images_php: &test_images_php
  <<: *test_images
  script:
    - docker exec test php -v

.test_apache: &test_apache
  <<: *test_images
  script:
    - docker exec test httpd -t -D DUMP_RUN_CFG

.test_solr: &test_solr
  <<: *test_images
  script:
    - docker exec --user=solr test ls -lAh /opt/solr/server/solr/mycores/
    - docker exec --user=solr test ls -lAh /opt/solr/server/solr/mycores/d8
    #- docker exec --user=solr test wget -q -O - "http://localhost:8983/solr/${SOLR_CORE}/admin/ping?wt=json"

.release: &release
  stage: release
  before_script:
    - docker login -u $RELEASE_USER -p $RELEASE_PASSWORD $RELEASE_REGISTRY
  script:
    - *docker_pull
    - docker tag $CI_REGISTRY_IMAGE/$IMAGE $RELEASE_IMAGE/$IMAGE
    - docker push $RELEASE_IMAGE/$IMAGE
  only:
    - master

################################################################################
# Jobs based on previous templates.
# Only variables need to be changed if needed.
################################################################################

before_script:
  - *docker_login_gitlab
  - *make_build

base:3.9:
  <<: *build_push
  variables:
    IMAGE: alpine-base:3.9
    DIR: alpine-base/3.9

test:3.9:
  <<: *test_base
  variables:
    IMAGE: alpine-base:3.9

release:base:3.9:
  <<: *release
  stage: release base
  only:
    - branches
  variables:
    IMAGE: alpine-base:3.9

apache:
  <<: *build_image
  variables:
    IMAGE: apache:latest
    DIR: apache

test:apache:
  <<: *test_apache
  variables:
    IMAGE: apache:latest

release:apache:
  <<: *release
  variables:
    IMAGE: apache:latest

php7.2:
  <<: *build_image
  variables:
    IMAGE: php:7.2
    DIR: php/7.2

test:php7.2:
  <<: *test_images_php
  variables:
    IMAGE: php:7.2

release:php:7.2:
  <<: *release
  variables:
    IMAGE: php:7.2

php7.3:
  <<: *build_image
  variables:
    IMAGE: php:7.3
    DIR: php/7.3

test:php7.3:
  <<: *test_images_php
  variables:
    IMAGE: php:7.3

release:php:7.3:
  <<: *release
  variables:
    IMAGE: php:7.3

solr5:
  <<: *build_image
  variables:
    IMAGE: solr:5
    DIR: solr/5

test:solr5:
  <<: *test_solr
  variables:
    IMAGE: solr:5

release:solr5:
  <<: *release
  variables:
    IMAGE: solr:5

solr6:
  <<: *build_image
  variables:
    IMAGE: solr:6
    DIR: solr/6

test:solr6:
  <<: *test_solr
  variables:
    IMAGE: solr:6

release:solr6:
  <<: *release
  variables:
    IMAGE: solr:6

solr7:
  <<: *build_image
  variables:
    IMAGE: solr:7
    DIR: solr/7

test:solr7:
  <<: *test_solr
  variables:
    IMAGE: solr:7

release:solr7:
  <<: *release
  variables:
    IMAGE: solr:7
